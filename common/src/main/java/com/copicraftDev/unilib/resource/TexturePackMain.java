package com.copicraftDev.unilib.resource;

import com.fasterxml.jackson.databind.ObjectMapper;
import com.fasterxml.jackson.databind.node.ObjectNode;

import java.io.File;
import java.io.InputStream;
import java.nio.file.Files;

public class TexturePackMain {
    private static final ObjectMapper mapper = new ObjectMapper();

    public static void generate() {
        String modId = "unilib"; // or Unilib.getModId()
        File packRoot = new File("run/resourcepacks/" + modId + "_pack");
        try {
            if (packRoot.exists()) {
                // Optional: clear old pack
                for (File f : packRoot.listFiles()) f.delete();
            }
            packRoot.mkdirs();

            // 1. Generate pack.mcmeta
            ObjectNode root = mapper.createObjectNode();
            ObjectNode pack = root.putObject("pack");
            pack.put("pack_format", 9);
            pack.put("description", "Generated by Unilib");

            File meta = new File(packRoot, "pack.mcmeta");
            mapper.writerWithDefaultPrettyPrinter().writeValue(meta, root);

            // 2. Copy a sample texture
            String samplePath = "/assets/" + modId + "/textures/block/sample_block.png";
            String target = "assets/" + modId + "/textures/block/sample_block.png";
            try (InputStream in = TexturePackMain.class.getResourceAsStream(samplePath)) {
                if (in != null) {
                    File outFile = new File(packRoot, target);
                    outFile.getParentFile().mkdirs();
                    Files.copy(in, outFile.toPath());
                }
            }

            System.out.println("[TexturePackMain] Generated resource pack at " + packRoot.getPath());
        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
